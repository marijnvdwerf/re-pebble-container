name: Docker

on: [push, pull_request]

env:
  IMAGE_NAME: toolchain

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - gcc: 4.8.x
          - gcc: 4.9.x

    steps:
      - uses: actions/checkout@v2
      - run: sudo apt install help2man libtool-bin libncurses5-dev

      - run: |
          echo 'CT_CONFIG_VERSION="3"' > defconfig
          echo 'CT_ARCH_ARM=y' >> defconfig
          echo 'CT_TARGET_VENDOR="none"' >> defconfig
          echo 'CT_LOG_PROGRESS_BAR=n' >> defconfig
          echo 'CT_CC_GCC_EXTRA_CONFIG_ARRAY="--with-gnu-ld --with-gnu-as"' >> defconfig
          echo 'CT_OBSOLETE=y' >> defconfig
          echo 'CT_EXPERIMENTAL=y' >> defconfig
          echo 'CT_GCC_USE_LINARO=y' >> defconfig
      - run: echo 'CT_GCC_LINARO_V_4_8=y' >> defconfig
        if: ${{ startsWith(matrix.gcc, '4.8.') }}
      - run: echo 'CT_GCC_LINARO_V_4_9=y' >> defconfig
        if: ${{ startsWith(matrix.gcc, '4.9.') }}
      - name: Show defconfig
        run: cat defconfig

      - run: echo '::set-env name=TOOLCHAIN::gcc-arm-none-eabi-${{ matrix.gcc }}'
      - run: echo $TOOLCHAIN

      - run: mkdir ${{runner.workspace}}/out
      - name: Build the toolchain
        run: ${{github.workspace}}/imagefiles/install-crosstool-ng-toolchain.sh -p ${{runner.workspace}}/out -c defconfig
      - run: ls -al ${{runner.workspace}}

      - run: tar czf ${{ env.TOOLCHAIN }}.tar.gz -C ${{ runner.workspace }}/out .
      - uses: 'actions/upload-artifact@v2'
        with:
          name: ${{ env.TOOLCHAIN }}.tar.gz
          path: ${{ env.TOOLCHAIN }}.tar.gz


      - run: mkdir ${{ runner.workspace }}/logs
      - uses: 'actions/upload-artifact@v2'
        with:
          name: ${{ env.TOOLCHAIN }}-logs
          path: ${{ runner.workspace }}/logs
