name: Docker

on: [push, pull_request]

env:
  IMAGE_NAME: toolchain

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - gcc: 4.8.0
            isl: 11
          - gcc: 4.8.1
            isl: 11
          - gcc: 4.8.2
          - gcc: 4.8.3
          - gcc: 4.8.4
          - gcc: 4.8.5
          - gcc: 4.8.5
            vanilla: true

          - gcc: 4.9.0
            isl: 12
          - gcc: 4.9.1
            isl: 12
          - gcc: 4.9.2
            isl: 12
          - gcc: 4.9.3
            isl: 14
          # 4.9.4 is released *after* timelineOS came to the OG

          - gcc: 5.1.0
            isl: 12
          - gcc: 5.2.0
            isl: 12
          - gcc: 5.3.0

    steps:
      - uses: actions/checkout@v2
      - run: sudo apt install help2man libtool-bin libncurses5-dev
      - name: Download release
        run: wget "https://ftp.gnu.org/gnu/gcc/gcc-${{matrix.gcc}}/gcc-${{matrix.gcc}}.tar.bz2"
        if: ${{ !matrix.vanilla }}
      - run: tar xjf "gcc-${{matrix.gcc}}.tar.bz2" -C ${{runner.workspace}}
        if: ${{ !matrix.vanilla }}

      - run: |
          echo 'CT_CONFIG_VERSION="3"' > defconfig
          echo 'CT_ARCH_ARM=y' >> defconfig
          echo 'CT_TARGET_VENDOR="none"' >> defconfig
          echo 'CT_LOG_PROGRESS_BAR=n' >> defconfig
          echo 'CT_CC_GCC_EXTRA_CONFIG_ARRAY="--with-gnu-ld --with-gnu-as"' >> defconfig
          echo 'CT_OBSOLETE=y' >> defconfig
          echo 'CT_EXPERIMENTAL=y' >> defconfig
      - run: |
          echo 'CT_GCC_SRC_CUSTOM=y' >> defconfig
          echo 'CT_GCC_CUSTOM_LOCATION="${{runner.workspace}}/gcc-${{matrix.gcc}}"' >> defconfig
        if: ${{ !matrix.vanilla }}
      - run: echo 'CT_ISL_V_0_${{ matrix.isl }}=y' >> defconfig
        if: ${{ matrix.isl }}
      - run: echo 'CT_GCC_V_4_8=y' >> defconfig
        if: ${{ startsWith(matrix.gcc, '4.8.') }}
      - run: echo 'CT_GCC_V_4_9=y' >> defconfig
        if: ${{ startsWith(matrix.gcc, '4.9.') }}
      - run: echo 'CT_GCC_V_5=y' >> defconfig
        if: ${{ startsWith(matrix.gcc, '5.') }}
      - name: Show defconfig
        run: cat defconfig

      - run: mkdir ${{runner.workspace}}/out
      - name: Build the toolchain
        run: ${{github.workspace}}/imagefiles/install-crosstool-ng-toolchain.sh -p ${{runner.workspace}}/out -c defconfig
      - run: ls -al ${{runner.workspace}}
      - uses: 'actions/upload-artifact@v2'
        if: ${{ !matrix.vanilla }}
        with:
          name: gcc-arm-none-eabi-${{ matrix.gcc }}
          path: ${{ runner.workspace }}/out
      - uses: 'actions/upload-artifact@v2'
        if: ${{ matrix.vanilla }}
        with:
          name: gcc-arm-none-eabi-${{ matrix.gcc }}-vanilla
          path: ${{ runner.workspace }}/out
